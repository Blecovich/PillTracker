//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(TreatmentTrackerRepo.TreatmentEntities),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets76753eeea93abb79991c2ccb8123a890d93d2c829b9f503665109ea567ad66e8))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework 6 Power Tools", "0.9.2.0")]
    internal sealed class ViewsForBaseEntitySets76753eeea93abb79991c2ccb8123a890d93d2c829b9f503665109ea567ad66e8 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "76753eeea93abb79991c2ccb8123a890d93d2c829b9f503665109ea567ad66e8"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "TreatmentEntitesModelStoreContainer.medication_schedule")
            {
                return GetView0();
            }

            if (extentName == "TreatmentEntities.schedule_DL")
            {
                return GetView1();
            }

            if (extentName == "TreatmentEntitesModelStoreContainer.treatment")
            {
                return GetView2();
            }

            if (extentName == "TreatmentEntities.treatment_DL")
            {
                return GetView3();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for TreatmentEntitesModelStoreContainer.medication_schedule.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing medication_schedule
        [TreatmentEntitesModel.Store.medication_schedule](T1.[medication_schedule.id], T1.[medication_schedule.administered], T1.[medication_schedule.treatment_id], T1.[medication_schedule.administered_date])
    FROM (
        SELECT 
            T.id AS [medication_schedule.id], 
            T.administered AS [medication_schedule.administered], 
            T.treatment_id AS [medication_schedule.treatment_id], 
            T.administered_date AS [medication_schedule.administered_date], 
            True AS _from0
        FROM TreatmentEntities.schedule_DL AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for TreatmentEntities.schedule_DL.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing schedule_DL
        [TreatmentEntitesModel.schedule_DL](T1.[schedule_DL.id], T1.[schedule_DL.administered], T1.[schedule_DL.treatment_id], T1.[schedule_DL.administered_date])
    FROM (
        SELECT 
            T.id AS [schedule_DL.id], 
            T.administered AS [schedule_DL.administered], 
            T.treatment_id AS [schedule_DL.treatment_id], 
            T.administered_date AS [schedule_DL.administered_date], 
            True AS _from0
        FROM TreatmentEntitesModelStoreContainer.medication_schedule AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for TreatmentEntitesModelStoreContainer.treatment.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing treatment
        [TreatmentEntitesModel.Store.treatment](T1.treatment_id, T1.[treatment.treatment_description], T1.[treatment.every_x_hours], T1.[treatment.max_per_day], T1.[treatment.start_time])
    FROM (
        SELECT 
            T.id AS treatment_id, 
            T.treatment_description AS [treatment.treatment_description], 
            T.every_x_hours AS [treatment.every_x_hours], 
            T.max_per_day AS [treatment.max_per_day], 
            T.start_time AS [treatment.start_time], 
            True AS _from0
        FROM TreatmentEntities.treatment_DL AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for TreatmentEntities.treatment_DL.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing treatment_DL
        [TreatmentEntitesModel.treatment_DL](T1.[treatment_DL.id], T1.[treatment_DL.treatment_description], T1.[treatment_DL.every_x_hours], T1.[treatment_DL.max_per_day], T1.[treatment_DL.start_time])
    FROM (
        SELECT 
            T.id AS [treatment_DL.id], 
            T.treatment_description AS [treatment_DL.treatment_description], 
            T.every_x_hours AS [treatment_DL.every_x_hours], 
            T.max_per_day AS [treatment_DL.max_per_day], 
            T.start_time AS [treatment_DL.start_time], 
            True AS _from0
        FROM TreatmentEntitesModelStoreContainer.treatment AS T
    ) AS T1");
        }
    }
}
